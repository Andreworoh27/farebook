package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/Andreworoh27/farebook/graph/model"
)

// CreatePostVisibleFriends is the resolver for the createPostVisibleFriends field.
func (r *mutationResolver) CreatePostVisibleFriends(ctx context.Context, inputPostVisibleFriends model.NewPostVisibleFriends) (*model.PostVisibleFriends, error) {
	panic(fmt.Errorf("not implemented: CreatePostVisibleFriends - createPostVisibleFriends"))
}

// DeleteAllPostVisibleFriends is the resolver for the deleteAllPostVisibleFriends field.
func (r *mutationResolver) DeleteAllPostVisibleFriends(ctx context.Context, postID string) (*model.PostVisibleFriends, error) {
	panic(fmt.Errorf("not implemented: DeleteAllPostVisibleFriends - deleteAllPostVisibleFriends"))
}

// DeleteSpesificPostVisibleFriends is the resolver for the deleteSpesificPostVisibleFriends field.
func (r *mutationResolver) DeleteSpesificPostVisibleFriends(ctx context.Context, postID string, visibleUserID string) (*model.PostVisibleFriends, error) {
	panic(fmt.Errorf("not implemented: DeleteSpesificPostVisibleFriends - deleteSpesificPostVisibleFriends"))
}

// GetPostVisibleFriends is the resolver for the getPostVisibleFriends field.
func (r *queryResolver) GetPostVisibleFriends(ctx context.Context, postID string) ([]*model.PostVisibleFriends, error) {
	panic(fmt.Errorf("not implemented: GetPostVisibleFriends - getPostVisibleFriends"))
}

// GetAllPostVisibleFriends is the resolver for the getAllPostVisibleFriends field.
func (r *queryResolver) GetAllPostVisibleFriends(ctx context.Context) ([]*model.PostVisibleFriends, error) {
	panic(fmt.Errorf("not implemented: GetAllPostVisibleFriends - getAllPostVisibleFriends"))
}
