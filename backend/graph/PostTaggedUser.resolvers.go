package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/Andreworoh27/farebook/graph/model"
)

// CreatePostTaggedUser is the resolver for the createPostTaggedUser field.
func (r *mutationResolver) CreatePostTaggedUser(ctx context.Context, inputPostTaggedUser model.NewPostTaggedUser) (*model.PostTaggedUser, error) {
	panic(fmt.Errorf("not implemented: CreatePostTaggedUser - createPostTaggedUser"))
}

// DeleteAllPostTaggedUser is the resolver for the deleteAllPostTaggedUser field.
func (r *mutationResolver) DeleteAllPostTaggedUser(ctx context.Context, postID string) (*model.PostTaggedUser, error) {
	panic(fmt.Errorf("not implemented: DeleteAllPostTaggedUser - deleteAllPostTaggedUser"))
}

// DeleteSpesificPostTaggedUser is the resolver for the deleteSpesificPostTaggedUser field.
func (r *mutationResolver) DeleteSpesificPostTaggedUser(ctx context.Context, postID string, taggedUserID string) (*model.PostTaggedUser, error) {
	panic(fmt.Errorf("not implemented: DeleteSpesificPostTaggedUser - deleteSpesificPostTaggedUser"))
}

// GetPostTaggedUser is the resolver for the getPostTaggedUser field.
func (r *queryResolver) GetPostTaggedUser(ctx context.Context, postID string) ([]*model.PostTaggedUser, error) {
	panic(fmt.Errorf("not implemented: GetPostTaggedUser - getPostTaggedUser"))
}

// GetAllPostTaggedUser is the resolver for the getAllPostTaggedUser field.
func (r *queryResolver) GetAllPostTaggedUser(ctx context.Context) ([]*model.PostTaggedUser, error) {
	panic(fmt.Errorf("not implemented: GetAllPostTaggedUser - getAllPostTaggedUser"))
}
